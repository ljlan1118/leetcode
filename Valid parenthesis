public List<String> generateParenthesis(int n) {
		List<String> res = new ArrayList<String>();
		dfs(n,n,res,new StringBuffer());
		return res;
	}

	public void dfs(int left, int right, List<String> res, StringBuffer temp) {
		if(left<0 || right<0) return;
		if(left>right) return;
		if(left == 0 && right == 0) {
			String s = temp.toString();
			res.add(s);
			return;
		}
		
		temp.append('(');
		dfs(left-1,right,res,temp);
		//回退操作（如果跳出循环，说明新加入的字符是不符合要求的）
		temp.deleteCharAt(temp.length()-1);
		
		temp.append(')');
		dfs(left,right-1,res,temp);
		//回退操作（如果跳出循环，说明新加入的字符是不符合要求的）
		temp.deleteCharAt(temp.length()-1);
	}
